@model Tournamentz.BL.Queries.TournamentQueries.My

@{
    ViewBag.Title = "Turnir - " + Model.Title;
}

<h2>@ViewBag.Title</h2>

<div id="teamsGridErrors" style="display: none;" class="alert alert-danger">
</div>

<table class="table table-striped table-responsive table-hover">
    <thead>
        <tr class="success">
            <th class="col-xs-8">Naziv tima</th>
            <th class="col-xs-4">Akcije</th>
        </tr>
    </thead>
    <tbody id="teamsTable"></tbody>

    <tfoot>
        <tr>
            <td colspan="2" class="text-right">
                <button id="showAddTeamModal" class="btn btn-success">Dodaj tim!</button>
            </td>
        </tr>
    </tfoot>
</table>

<div class="modal fade" id="addTeamModal" tabindex="-1" role="dialog" aria-labelledby="addTeamModal-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="addTeamModal-label">Dodaj tim</h4>
            </div>
            <div class="modal-body">
                <form id="addTeamForm" class="form-horizontal">

                    <div id="teamFormErrors" style="display: none;" class="alert alert-danger">
                    </div>

                    <div class="form-group">
                        @Html.Label("TeamId", "Tim", new {@class = "col-md-3 control-label"})
                        <div class="col-md-9">
                            @Html.DropDownList("TeamId", (SelectList) ViewBag.Teams, new {@class = "form-control"})
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" data-dismiss="modal">Odustani</button>
                <button type="button" class="btn btn-success" id="addTeamButton">Odaberi</button>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    <script>
        $(function () {

            fetchTeams();

            $('#showAddTeamModal').on('click', function() {
                $('#addTeamModal').modal('show');
            });

            $('#addTeamButton').on('click', function () {
                var arr = $('#addTeamForm').serializeArray(), obj = {};
                $.each(arr, function(_, val) {
                    obj[val.name] = val.value;
                });

                obj.TournamentId = '@Model.Id';

                $.ajax({
                    url: '@Url.Action("AddTeam", "Tournaments")',
                    method:'POST',
                    data: obj,
                    success: function() {
                        $('#teamFormErrors').hide();
                        $('#addTeamModal').modal('hide');
                        fetchTeams();
                    },
                    error: function (resp) {
                        if (resp.responseJSON.length < 1) {
                            return;
                        }

                        var list = $('<ul>');
                        $.each(resp.responseJSON, function(_, rule) {
                            list.append($('<li>').text(rule.Message));
                        });
                        $('#teamFormErrors').children().remove();
                        $('#teamFormErrors').append(list);
                        $('#teamFormErrors').show();

                    }
                });
            });

            function fetchTeams() {
                $('#teamsTable').children().remove();

                $.ajax({
                    url: '@Url.Action("Teams", "Tournaments", new {id = Model.Id})',
                    success: function (data) {
                        $.each(data, function(_, item) {
                            var cellTitle = $('<td>');
                            cellTitle.text(item.Title);

                            var action = $('<a>');
                            action.data('tournament-id', '@Model.Id');
                            action.data('team-id', item.Id);
                            action.append($('<i>').addClass('fa fa-remove'));
                            action.css('cursor: pointer;');
                            action.on('click', callRemoveTeam);

                            var cellAction = $('<td>');
                            cellAction.append(action);

                            var row = $('<tr>');
                            row.append(cellTitle);
                            row.append(cellAction);
                            $('#teamsTable').append(row);
                        });
                    }
                });
            }

            function callRemoveTeam() {
                var node = $(this);
                var command = {
                    TournamentId: node.data('tournament-id'),
                    TeamId: node.data('team-id')
                };

                $.ajax({
                    url: '@Url.Action("RemoveTeam", "Tournaments")',
                    method: 'POST',
                    data: command,
                    success: function () {
                        $('#teamsGridErrors').hide();
                        fetchTeams();
                    },
                    error: function (resp) {
                        if (resp.responseJSON.length < 1) {
                            return;
                        }

                        var list = $('<ul>');
                        $.each(resp.responseJSON, function (_, rule) {
                            list.append($('<li>').text(rule.Message));
                        });
                        $('#teamsGridErrors').append(list);
                        $('#teamsGridErrors').show();

                    }
                });
            }
        })
    </script>
}
